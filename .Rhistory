is.factor(pull(activity_labels, 2))
pull(activity_labels, 2)
join(y, pull(activity_labels, 2))
inner_join(y, pull(activity_labels, 2))
colnames(pull(activity_labels, 2))
y2
c(activity_labels)
as.character(activity_labels)
as.character(activity_labels$V2)
c(activity_labels$V2)
c(activity_labels$V1)
is.factor(activity_labels$V1)
factor(y$activity, labels=activity_labels$V2)
as.character(activity_labels$V2)
c(activity_labels)
c(activity_labels)$V2
as.character(c(activity_labels)$V2)
as.character(activity_label$V2)
as.character(activity_labels$V2)
is.list(as.character(activity_labels$V2))
is.vector(as.character(activity_labels$V2))
c(activity_labels)$V2
is.vector(c(activity_labels)$V2)
is.factor(y$V1)
is.list(y$V1)
is.vector(y$V1)
dim(y$V1)
len(y$V1)
length(y$V1)
is.vector(c(activity_labels)$V2)
is.factor(c(activity_labels)$V2)
is.factor(y)
is.factor(y[,2])
is.factor(y2[,2])
is.factor(y2$activitylabel)
is.factor(y2$activity)
identical(as.factor(vec), activitylabel)
identical(activitylabel, y2$activitylabel)
activitylabel
y2$activitylabel
y2$activitylabel
activitylabel
describe.factor(y2$activitylabel)
library(prettr)
install.packages('prettyr')
q()
ls()
rm(list=ls())
q()
ls()
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y2<-inner_join(y, activity_labels)
y2<-rename(y2, activity = 1, label = 2)
labels<-select(y2, label)
td<-bind_cols(X, labels, subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
colnames(td)
head(td_means[,1:5],5)
head(td_mean[,1:5],5)
Y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
Sub_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read data description
variable_names <- read.table("./UCI HAR Dataset/features.txt")
# read activity labels
#activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
# 1. Merges the training and the test sets to create one data set.
X_total <- rbind(X_train, X_test)
Y_total <- rbind(Y_train, Y_test)
Sub_total <- rbind(Sub_train, Sub_test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
selected_var <- variable_names[grep("mean\\(\\)|std\\(\\)",variable_names[,2]),]
X_total <- X_total[,selected_var[,1]]
# 3. Uses descriptive activity names to name the activities in the data set
Y2_total<-Y_total
colnames(Y2_total) <- "activity"
Y2_total$activitylabel <- factor(Y2_total$activity, labels = as.character(activity_labels[,2]))
activitylabel <- Y2_total[,-1]
# 4. Appropriately labels the data set with descriptive variable names.
colnames(X_total) <- variable_names[selected_var[,1],2]
# 5. From the data set in step 4, creates a second, independent tidy data set with the average
# of each variable for each activity and each subject.
colnames(Sub_total) <- "subject"
total <- cbind(X_total, activitylabel, Sub_total)
total_mean <- total %>% group_by(activitylabel, subject) %>% summarize_each(funs(mean))
Y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
Sub_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# read test data
#X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
Y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
Sub_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read data description
variable_names <- read.table("./UCI HAR Dataset/features.txt")
# read activity labels
#activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
# 1. Merges the training and the test sets to create one data set.
X_total <- rbind(X_train, X_test)
Y_total <- rbind(Y_train, Y_test)
Sub_total <- rbind(Sub_train, Sub_test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
selected_var <- variable_names[grep("mean\\(\\)|std\\(\\)",variable_names[,2]),]
X_total <- X_total[,selected_var[,1]]
# 3. Uses descriptive activity names to name the activities in the data set
Y2_total<-Y_total
colnames(Y2_total) <- "activity"
Y2_total$activitylabel <- factor(Y2_total$activity, labels = as.character(activity_labels[,2]))
activitylabel <- Y2_total[,-1]
# 4. Appropriately labels the data set with descriptive variable names.
colnames(X_total) <- variable_names[selected_var[,1],2]
# 5. From the data set in step 4, creates a second, independent tidy data set with the average
# of each variable for each activity and each subject.
colnames(Sub_total) <- "subject"
total <- cbind(X_total, activitylabel, Sub_total)
total_mean <- total %>% group_by(activitylabel, subject) %>% summarize_each(funs(mean))
head(td_means[,1:5],5)
head(td_mean[,1:5],5)
head(total_mean[,1:5],5)
head(total_mean[,1:5],10)
head(total_mean[,1:5],30)
filter(td_mean, activitylabel == 'WALKING' & subject == 1)
is.data.frame(td_mean)
colnames(td_mean)
filter(td_mean, label == 'WALKING' & subject == 1)
filter(total_mean, activitylabel == 'WALKING' & subject == 1)
y2
is.factor(y2)
is.factor(y2$activity))
is.factor(y2$activity)
is.factor(y2$label)
labels
labels2
labels2<-factor(y2$activity, labels = as.character(activity_labels$V2))
labels2
labels
labels2
labels
labels2
is.factor(labels2)
is.factor(activitylabels)
is.factor(activitylabel)
identical(activitylabel, labels2)
labels2<-factor(y2$activity, labels = activity_labels$V2)
identical(activitylabel, labels2)
rm(list=ls())
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
colnames(y)<-'activity'
y$activity<-factor(y$activity, labels = activity_labels$V2)
td<-bind_cols(X, y, subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
y
is.factor(y)
is.vector(y)
is.data.frame(y)
rm (list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-inner_join(y, activity_labels)
y<-rename(y, activity = 1, label = 2)
labels<-factor(y$activity, labels = activity_labels$V2)
td<-bind_cols(X, labels, subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
colnames(labels)
dim(y)
colnames(y)
is.factor(y$label)
y$label<-factor(y$activity, labels = activity_labels$V2)
is.factor(y$label)
rm (list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y$label<-factor(y$activity, labels = activity_labels$V2)
y<-rename(y, activity = 1)
labels<-y$label
td<-bind_cols(X, labels, subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
factor(y$activity, labels = activity_labels$V2)
test<-factor(y$activity, labels = activity_labels$V2)
y$label<-factor(y$activity, labels = activity_labels$V2)
y
rm(list=ls())
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y$activity
y
colnames(y)
y<-rename(y, activity = 1)
colnames(y)
y$label<-factor(y$activity, labels = activity_labels$V2)
colnames(y)
dim(y)
is.factor(y$label)
td<-bind_cols(X, y$label, subjects)
labels<-y$label
colnames(labels)
pull(y, label)
colnames(pull(y, label))
colnames(select(y, label))
td<-bind_cols(X, select(y,label), subjects)
colnames(td)
rm(list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-rename(y, activity = 1)
y$label<-factor(y$activity, labels = activity_labels$V2)
td<-bind_cols(X, select(y,label), subjects)
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
identity(td_mean, total_mean)
Y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
Sub_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# read test data
#X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
Y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
Sub_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read data description
variable_names <- read.table("./UCI HAR Dataset/features.txt")
# read activity labels
#activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
# 1. Merges the training and the test sets to create one data set.
X_total <- rbind(X_train, X_test)
Y_total <- rbind(Y_train, Y_test)
Sub_total <- rbind(Sub_train, Sub_test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
selected_var <- variable_names[grep("mean\\(\\)|std\\(\\)",variable_names[,2]),]
X_total <- X_total[,selected_var[,1]]
# 3. Uses descriptive activity names to name the activities in the data set
Y2_total<-Y_total
colnames(Y2_total) <- "activity"
Y2_total$activitylabel <- factor(Y2_total$activity, labels = as.character(activity_labels[,2]))
activitylabel <- Y2_total[,-1]
# 4. Appropriately labels the data set with descriptive variable names.
colnames(X_total) <- variable_names[selected_var[,1],2]
# 5. From the data set in step 4, creates a second, independent tidy data set with the average
# of each variable for each activity and each subject.
colnames(Sub_total) <- "subject"
total <- cbind(X_total, activitylabel, Sub_total)
total_mean <- total %>% group_by(activitylabel, subject) %>% summarize_each(funs(mean))
identity(td_mean, total_mean)
identical(td_mean, total_mean)
all.equal(td_mean, total_mean)
td_mean
total_mean
identical(td_mean, total_mean)
td_mean == total_mean
unique(td_mean == total_mean)
colnames(total_mean)
colnames(td_mean)
colnames(total_mean)
rm(list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-rename(y, activity = 1)
y$label<-factor(y$activity, labels = activity_labels$V2)
td<-bind_cols(X, select(y,label), subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
colnames(td_mean)
is.factor(td_mean$label)
Y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
Sub_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# read test data
#X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
Y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
Sub_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read data description
variable_names <- read.table("./UCI HAR Dataset/features.txt")
# read activity labels
#activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
# 1. Merges the training and the test sets to create one data set.
X_total <- rbind(X_train, X_test)
Y_total <- rbind(Y_train, Y_test)
Sub_total <- rbind(Sub_train, Sub_test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
selected_var <- variable_names[grep("mean\\(\\)|std\\(\\)",variable_names[,2]),]
X_total <- X_total[,selected_var[,1]]
# 3. Uses descriptive activity names to name the activities in the data set
Y_total<-Y_total
colnames(Y_total) <- "activity"
Y_total$label <- factor(Y_total$activity, labels = as.character(activity_labels[,2]))
activitylabel <- Y_total[,-1]
# 4. Appropriately labels the data set with descriptive variable names.
colnames(X_total) <- variable_names[selected_var[,1],2]
# 5. From the data set in step 4, creates a second, independent tidy data set with the average
# of each variable for each activity and each subject.
colnames(Sub_total) <- "subject"
total <- cbind(X_total, activitylabel, Sub_total)
total_mean <- total %>% group_by(label, subject) %>% summarize_each(funs(mean))
activitylabel
colnames(activitylabel)
colnames(activitylabel)
rm(list=ls())
library(dplyr)
# read train data
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
Y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
Sub_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
# read test data
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
Y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
Sub_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# read data description
variable_names <- read.table("./UCI HAR Dataset/features.txt")
# read activity labels
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
# 1. Merges the training and the test sets to create one data set.
X_total <- rbind(X_train, X_test)
Y_total <- rbind(Y_train, Y_test)
Sub_total <- rbind(Sub_train, Sub_test)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
selected_var <- variable_names[grep("mean\\(\\)|std\\(\\)",variable_names[,2]),]
X_total <- X_total[,selected_var[,1]]
# 3. Uses descriptive activity names to name the activities in the data set
colnames(Y_total) <- "activity"
Y_total$activitylabel <- factor(Y_total$activity, labels = as.character(activity_labels[,2]))
activitylabel <- Y_total[,-1]
# 4. Appropriately labels the data set with descriptive variable names.
colnames(X_total) <- variable_names[selected_var[,1],2]
# 5. From the data set in step 4, creates a second, independent tidy data set with the average
# of each variable for each activity and each subject.
colnames(Sub_total) <- "subject"
total <- cbind(X_total, activitylabel, Sub_total)
total_mean <- total %>% group_by(activitylabel, subject) %>% summarize_each(funs(mean))
write.table(total_mean, file = "./UCI HAR Dataset/tidydata.txt", row.names = FALSE, col.names = TRUE)
ls()
total_mean
rm(activity_labels)
ls()
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
X<-bind_rows(X_train, X_test)
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-rename(y, activity = 1)
y$label<-factor(y$activity, labels = activity_labels$V2)
td<-bind_cols(X, select(y,label), subjects)
#td<-td %>% group_by(label, subject) %>% summarize_each(funs(mean))
td_mean <- summarize(group_by(td, label, subject), across(1:66, mean))
td_mean
total_mean
rm(list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
#1. Merges the training and the test sets to create one data set.
X<-bind_rows(X_train, X_test)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
#3. Uses descriptive activity names to name the activities in the data set
#4. Appropriately labels the data set with descriptive variable names.
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-rename(y, activity = 1)
y$label<-factor(y$activity, labels = activity_labels$V2)
#5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
td<-bind_cols(X, select(y,label), subjects)
td_means <- summarize(group_by(td, label, subject), across(1:66, mean))
write.table(total_mean, file = "./UCI HAR Dataset/tidy_dataset.txt", append=FALSE, row.names=FALSE)
rm(list=ls())
library(tidyverse)
X_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subjects_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subjects_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
features <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", stringsAsFactors=FALSE)
#1. Merges the training and the test sets to create one data set.
X<-bind_rows(X_train, X_test)
subjects<-bind_rows(subjects_train, subjects_test)
y<-bind_rows(y_train, y_test)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features_mean_std <- filter(features, str_detect(V2, 'mean\\(\\)|std\\(\\)'))
X<-select(X, features_mean_std$V1)
#3. Uses descriptive activity names to name the activities in the data set
#4. Appropriately labels the data set with descriptive variable names.
colnames(X)<-features_mean_std$V2
subjects<-rename(subjects, subject=1)
y<-rename(y, activity = 1)
y$label<-factor(y$activity, labels = activity_labels$V2)
#5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
td<-bind_cols(X, select(y,label), subjects)
td_means <- summarize(group_by(td, label, subject), across(1:66, mean))
write.table(td_means, file = "./UCI HAR Dataset/tidy_dataset.txt", append=FALSE, row.names=FALSE)
q()
q()
rm(list=ls())
q()
ls()
source('run_analysis.R')
ls()
q()
